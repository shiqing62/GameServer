// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { BossState } from '../../game/boss/boss-state.js';


export class BossStateSyncsPush {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BossStateSyncsPush {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBossStateSyncsPush(bb:flatbuffers.ByteBuffer, obj?:BossStateSyncsPush):BossStateSyncsPush {
  return (obj || new BossStateSyncsPush()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBossStateSyncsPush(bb:flatbuffers.ByteBuffer, obj?:BossStateSyncsPush):BossStateSyncsPush {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BossStateSyncsPush()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

bossId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

bossState():BossState {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : BossState.Spawn;
}

skillId():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startBossStateSyncsPush(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addBossId(builder:flatbuffers.Builder, bossId:number) {
  builder.addFieldInt32(0, bossId, 0);
}

static addBossState(builder:flatbuffers.Builder, bossState:BossState) {
  builder.addFieldInt8(1, bossState, BossState.Spawn);
}

static addSkillId(builder:flatbuffers.Builder, skillId:number) {
  builder.addFieldInt32(2, skillId, 0);
}

static endBossStateSyncsPush(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishBossStateSyncsPushBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedBossStateSyncsPushBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createBossStateSyncsPush(builder:flatbuffers.Builder, bossId:number, bossState:BossState, skillId:number):flatbuffers.Offset {
  BossStateSyncsPush.startBossStateSyncsPush(builder);
  BossStateSyncsPush.addBossId(builder, bossId);
  BossStateSyncsPush.addBossState(builder, bossState);
  BossStateSyncsPush.addSkillId(builder, skillId);
  return BossStateSyncsPush.endBossStateSyncsPush(builder);
}
}
