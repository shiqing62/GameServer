// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class DealBossDamageRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DealBossDamageRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDealBossDamageRequest(bb:flatbuffers.ByteBuffer, obj?:DealBossDamageRequest):DealBossDamageRequest {
  return (obj || new DealBossDamageRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDealBossDamageRequest(bb:flatbuffers.ByteBuffer, obj?:DealBossDamageRequest):DealBossDamageRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DealBossDamageRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

uid():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

skillId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

damage():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startDealBossDamageRequest(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addUid(builder:flatbuffers.Builder, uid:number) {
  builder.addFieldInt32(0, uid, 0);
}

static addSkillId(builder:flatbuffers.Builder, skillId:number) {
  builder.addFieldInt32(1, skillId, 0);
}

static addDamage(builder:flatbuffers.Builder, damage:number) {
  builder.addFieldFloat32(2, damage, 0.0);
}

static endDealBossDamageRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishDealBossDamageRequestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedDealBossDamageRequestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createDealBossDamageRequest(builder:flatbuffers.Builder, uid:number, skillId:number, damage:number):flatbuffers.Offset {
  DealBossDamageRequest.startDealBossDamageRequest(builder);
  DealBossDamageRequest.addUid(builder, uid);
  DealBossDamageRequest.addSkillId(builder, skillId);
  DealBossDamageRequest.addDamage(builder, damage);
  return DealBossDamageRequest.endDealBossDamageRequest(builder);
}
}
