// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class TakeBossDamageRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TakeBossDamageRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTakeBossDamageRequest(bb:flatbuffers.ByteBuffer, obj?:TakeBossDamageRequest):TakeBossDamageRequest {
  return (obj || new TakeBossDamageRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTakeBossDamageRequest(bb:flatbuffers.ByteBuffer, obj?:TakeBossDamageRequest):TakeBossDamageRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TakeBossDamageRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

uid():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

skillId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startTakeBossDamageRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addUid(builder:flatbuffers.Builder, uid:number) {
  builder.addFieldInt32(0, uid, 0);
}

static addSkillId(builder:flatbuffers.Builder, skillId:number) {
  builder.addFieldInt32(1, skillId, 0);
}

static endTakeBossDamageRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishTakeBossDamageRequestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedTakeBossDamageRequestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createTakeBossDamageRequest(builder:flatbuffers.Builder, uid:number, skillId:number):flatbuffers.Offset {
  TakeBossDamageRequest.startTakeBossDamageRequest(builder);
  TakeBossDamageRequest.addUid(builder, uid);
  TakeBossDamageRequest.addSkillId(builder, skillId);
  return TakeBossDamageRequest.endTakeBossDamageRequest(builder);
}
}
