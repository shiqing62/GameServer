// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { DeBuffParamType } from '../../game/common/de-buff-param-type.js';
import { ParamValue, unionToParamValue, unionListToParamValue } from '../../game/common/param-value.js';


export class DeBuffParam {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DeBuffParam {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDeBuffParam(bb:flatbuffers.ByteBuffer, obj?:DeBuffParam):DeBuffParam {
  return (obj || new DeBuffParam()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDeBuffParam(bb:flatbuffers.ByteBuffer, obj?:DeBuffParam):DeBuffParam {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DeBuffParam()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

paramType():DeBuffParamType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : DeBuffParamType.Duration;
}

paramValueType():ParamValue {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ParamValue.NONE;
}

paramValue<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startDeBuffParam(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addParamType(builder:flatbuffers.Builder, paramType:DeBuffParamType) {
  builder.addFieldInt8(0, paramType, DeBuffParamType.Duration);
}

static addParamValueType(builder:flatbuffers.Builder, paramValueType:ParamValue) {
  builder.addFieldInt8(1, paramValueType, ParamValue.NONE);
}

static addParamValue(builder:flatbuffers.Builder, paramValueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, paramValueOffset, 0);
}

static endDeBuffParam(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDeBuffParam(builder:flatbuffers.Builder, paramType:DeBuffParamType, paramValueType:ParamValue, paramValueOffset:flatbuffers.Offset):flatbuffers.Offset {
  DeBuffParam.startDeBuffParam(builder);
  DeBuffParam.addParamType(builder, paramType);
  DeBuffParam.addParamValueType(builder, paramValueType);
  DeBuffParam.addParamValue(builder, paramValueOffset);
  return DeBuffParam.endDeBuffParam(builder);
}
}
