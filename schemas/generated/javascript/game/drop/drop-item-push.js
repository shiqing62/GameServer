"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropItemPush = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var vec3_js_1 = require("../../game/common/vec3.js");
var DropItemPush = /** @class */ (function () {
    function DropItemPush() {
        this.bb = null;
        this.bb_pos = 0;
    }
    DropItemPush.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    DropItemPush.getRootAsDropItemPush = function (bb, obj) {
        return (obj || new DropItemPush()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    DropItemPush.getSizePrefixedRootAsDropItemPush = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new DropItemPush()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    DropItemPush.prototype.itemId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    DropItemPush.prototype.instanceId = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    DropItemPush.prototype.chunkX = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    DropItemPush.prototype.chunkY = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    DropItemPush.prototype.pos = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? (obj || new vec3_js_1.Vec3()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
    };
    DropItemPush.startDropItemPush = function (builder) {
        builder.startObject(5);
    };
    DropItemPush.addItemId = function (builder, itemId) {
        builder.addFieldInt32(0, itemId, 0);
    };
    DropItemPush.addInstanceId = function (builder, instanceId) {
        builder.addFieldInt32(1, instanceId, 0);
    };
    DropItemPush.addChunkX = function (builder, chunkX) {
        builder.addFieldInt32(2, chunkX, 0);
    };
    DropItemPush.addChunkY = function (builder, chunkY) {
        builder.addFieldInt32(3, chunkY, 0);
    };
    DropItemPush.addPos = function (builder, posOffset) {
        builder.addFieldOffset(4, posOffset, 0);
    };
    DropItemPush.endDropItemPush = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    return DropItemPush;
}());
exports.DropItemPush = DropItemPush;
