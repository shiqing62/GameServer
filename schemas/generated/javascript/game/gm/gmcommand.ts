// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { GMData, unionToGmdata, unionListToGmdata } from '../../game/gm/gmdata.js';
import { GMType } from '../../game/gm/gmtype.js';


export class GMCommand {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GMCommand {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGMCommand(bb:flatbuffers.ByteBuffer, obj?:GMCommand):GMCommand {
  return (obj || new GMCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGMCommand(bb:flatbuffers.ByteBuffer, obj?:GMCommand):GMCommand {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GMCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

gmType():GMType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : GMType.DropItem;
}

gmDataType():GMData {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : GMData.NONE;
}

gmData<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startGMCommand(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addGmType(builder:flatbuffers.Builder, gmType:GMType) {
  builder.addFieldInt8(0, gmType, GMType.DropItem);
}

static addGmDataType(builder:flatbuffers.Builder, gmDataType:GMData) {
  builder.addFieldInt8(1, gmDataType, GMData.NONE);
}

static addGmData(builder:flatbuffers.Builder, gmDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, gmDataOffset, 0);
}

static endGMCommand(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishGMCommandBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedGMCommandBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createGMCommand(builder:flatbuffers.Builder, gmType:GMType, gmDataType:GMData, gmDataOffset:flatbuffers.Offset):flatbuffers.Offset {
  GMCommand.startGMCommand(builder);
  GMCommand.addGmType(builder, gmType);
  GMCommand.addGmDataType(builder, gmDataType);
  GMCommand.addGmData(builder, gmDataOffset);
  return GMCommand.endGMCommand(builder);
}
}
