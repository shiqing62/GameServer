"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnterGameResponse = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var player_data_js_1 = require("../../game/player/player-data.js");
var EnterGameResponse = /** @class */ (function () {
    function EnterGameResponse() {
        this.bb = null;
        this.bb_pos = 0;
    }
    EnterGameResponse.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    EnterGameResponse.getRootAsEnterGameResponse = function (bb, obj) {
        return (obj || new EnterGameResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    EnterGameResponse.getSizePrefixedRootAsEnterGameResponse = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new EnterGameResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    EnterGameResponse.prototype.selfPlayer = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? (obj || new player_data_js_1.PlayerData()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
    };
    EnterGameResponse.prototype.visiblePlayers = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? (obj || new player_data_js_1.PlayerData()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    EnterGameResponse.prototype.visiblePlayersLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    EnterGameResponse.startEnterGameResponse = function (builder) {
        builder.startObject(2);
    };
    EnterGameResponse.addSelfPlayer = function (builder, selfPlayerOffset) {
        builder.addFieldOffset(0, selfPlayerOffset, 0);
    };
    EnterGameResponse.addVisiblePlayers = function (builder, visiblePlayersOffset) {
        builder.addFieldOffset(1, visiblePlayersOffset, 0);
    };
    EnterGameResponse.createVisiblePlayersVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    EnterGameResponse.startVisiblePlayersVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    EnterGameResponse.endEnterGameResponse = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    EnterGameResponse.createEnterGameResponse = function (builder, selfPlayerOffset, visiblePlayersOffset) {
        EnterGameResponse.startEnterGameResponse(builder);
        EnterGameResponse.addSelfPlayer(builder, selfPlayerOffset);
        EnterGameResponse.addVisiblePlayers(builder, visiblePlayersOffset);
        return EnterGameResponse.endEnterGameResponse(builder);
    };
    return EnterGameResponse;
}());
exports.EnterGameResponse = EnterGameResponse;
