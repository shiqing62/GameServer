// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { EnterGameRequest } from '../../game/login/enter-game-request.js';
import { EnterGameResponse } from '../../game/login/enter-game-response.js';
import { LoginRequest } from '../../game/login/login-request.js';
import { LoginResponse } from '../../game/login/login-response.js';
import { DamageSyncsPush } from '../../game/syncs/damage-syncs-push.js';
import { DamageSyncsRequest } from '../../game/syncs/damage-syncs-request.js';
import { PlayerEnterPush } from '../../game/syncs/player-enter-push.js';
import { PlayerExitPush } from '../../game/syncs/player-exit-push.js';
import { PlayerExitRequest } from '../../game/syncs/player-exit-request.js';
import { PlayerLevelChangeRequest } from '../../game/syncs/player-level-change-request.js';
import { PlayerMovePush } from '../../game/syncs/player-move-push.js';
import { PlayerMoveRequest } from '../../game/syncs/player-move-request.js';
import { PlayerMoveResponse } from '../../game/syncs/player-move-response.js';
import { PlayerStateSyncs } from '../../game/syncs/player-state-syncs.js';
import { SkillSyncs } from '../../game/syncs/skill-syncs.js';


export enum Payload {
  NONE = 0,
  Game_Login_LoginRequest = 1,
  Game_Login_LoginResponse = 2,
  Game_Login_EnterGameRequest = 3,
  Game_Login_EnterGameResponse = 4,
  Game_Syncs_PlayerEnterPush = 5,
  Game_Syncs_PlayerExitRequest = 6,
  Game_Syncs_PlayerExitPush = 7,
  Game_Syncs_PlayerMoveRequest = 8,
  Game_Syncs_PlayerMoveResponse = 9,
  Game_Syncs_PlayerMovePush = 10,
  Game_Syncs_SkillSyncs = 11,
  Game_Syncs_DamageSyncsRequest = 12,
  Game_Syncs_DamageSyncsPush = 13,
  Game_Syncs_PlayerStateSyncs = 14,
  Game_Syncs_PlayerLevelChangeRequest = 15
}

export function unionToPayload(
  type: Payload,
  accessor: (obj:DamageSyncsPush|DamageSyncsRequest|EnterGameRequest|EnterGameResponse|LoginRequest|LoginResponse|PlayerEnterPush|PlayerExitPush|PlayerExitRequest|PlayerLevelChangeRequest|PlayerMovePush|PlayerMoveRequest|PlayerMoveResponse|PlayerStateSyncs|SkillSyncs) => DamageSyncsPush|DamageSyncsRequest|EnterGameRequest|EnterGameResponse|LoginRequest|LoginResponse|PlayerEnterPush|PlayerExitPush|PlayerExitRequest|PlayerLevelChangeRequest|PlayerMovePush|PlayerMoveRequest|PlayerMoveResponse|PlayerStateSyncs|SkillSyncs|null
): DamageSyncsPush|DamageSyncsRequest|EnterGameRequest|EnterGameResponse|LoginRequest|LoginResponse|PlayerEnterPush|PlayerExitPush|PlayerExitRequest|PlayerLevelChangeRequest|PlayerMovePush|PlayerMoveRequest|PlayerMoveResponse|PlayerStateSyncs|SkillSyncs|null {
  switch(Payload[type]) {
    case 'NONE': return null; 
    case 'Game_Login_LoginRequest': return accessor(new LoginRequest())! as LoginRequest;
    case 'Game_Login_LoginResponse': return accessor(new LoginResponse())! as LoginResponse;
    case 'Game_Login_EnterGameRequest': return accessor(new EnterGameRequest())! as EnterGameRequest;
    case 'Game_Login_EnterGameResponse': return accessor(new EnterGameResponse())! as EnterGameResponse;
    case 'Game_Syncs_PlayerEnterPush': return accessor(new PlayerEnterPush())! as PlayerEnterPush;
    case 'Game_Syncs_PlayerExitRequest': return accessor(new PlayerExitRequest())! as PlayerExitRequest;
    case 'Game_Syncs_PlayerExitPush': return accessor(new PlayerExitPush())! as PlayerExitPush;
    case 'Game_Syncs_PlayerMoveRequest': return accessor(new PlayerMoveRequest())! as PlayerMoveRequest;
    case 'Game_Syncs_PlayerMoveResponse': return accessor(new PlayerMoveResponse())! as PlayerMoveResponse;
    case 'Game_Syncs_PlayerMovePush': return accessor(new PlayerMovePush())! as PlayerMovePush;
    case 'Game_Syncs_SkillSyncs': return accessor(new SkillSyncs())! as SkillSyncs;
    case 'Game_Syncs_DamageSyncsRequest': return accessor(new DamageSyncsRequest())! as DamageSyncsRequest;
    case 'Game_Syncs_DamageSyncsPush': return accessor(new DamageSyncsPush())! as DamageSyncsPush;
    case 'Game_Syncs_PlayerStateSyncs': return accessor(new PlayerStateSyncs())! as PlayerStateSyncs;
    case 'Game_Syncs_PlayerLevelChangeRequest': return accessor(new PlayerLevelChangeRequest())! as PlayerLevelChangeRequest;
    default: return null;
  }
}

export function unionListToPayload(
  type: Payload, 
  accessor: (index: number, obj:DamageSyncsPush|DamageSyncsRequest|EnterGameRequest|EnterGameResponse|LoginRequest|LoginResponse|PlayerEnterPush|PlayerExitPush|PlayerExitRequest|PlayerLevelChangeRequest|PlayerMovePush|PlayerMoveRequest|PlayerMoveResponse|PlayerStateSyncs|SkillSyncs) => DamageSyncsPush|DamageSyncsRequest|EnterGameRequest|EnterGameResponse|LoginRequest|LoginResponse|PlayerEnterPush|PlayerExitPush|PlayerExitRequest|PlayerLevelChangeRequest|PlayerMovePush|PlayerMoveRequest|PlayerMoveResponse|PlayerStateSyncs|SkillSyncs|null, 
  index: number
): DamageSyncsPush|DamageSyncsRequest|EnterGameRequest|EnterGameResponse|LoginRequest|LoginResponse|PlayerEnterPush|PlayerExitPush|PlayerExitRequest|PlayerLevelChangeRequest|PlayerMovePush|PlayerMoveRequest|PlayerMoveResponse|PlayerStateSyncs|SkillSyncs|null {
  switch(Payload[type]) {
    case 'NONE': return null; 
    case 'Game_Login_LoginRequest': return accessor(index, new LoginRequest())! as LoginRequest;
    case 'Game_Login_LoginResponse': return accessor(index, new LoginResponse())! as LoginResponse;
    case 'Game_Login_EnterGameRequest': return accessor(index, new EnterGameRequest())! as EnterGameRequest;
    case 'Game_Login_EnterGameResponse': return accessor(index, new EnterGameResponse())! as EnterGameResponse;
    case 'Game_Syncs_PlayerEnterPush': return accessor(index, new PlayerEnterPush())! as PlayerEnterPush;
    case 'Game_Syncs_PlayerExitRequest': return accessor(index, new PlayerExitRequest())! as PlayerExitRequest;
    case 'Game_Syncs_PlayerExitPush': return accessor(index, new PlayerExitPush())! as PlayerExitPush;
    case 'Game_Syncs_PlayerMoveRequest': return accessor(index, new PlayerMoveRequest())! as PlayerMoveRequest;
    case 'Game_Syncs_PlayerMoveResponse': return accessor(index, new PlayerMoveResponse())! as PlayerMoveResponse;
    case 'Game_Syncs_PlayerMovePush': return accessor(index, new PlayerMovePush())! as PlayerMovePush;
    case 'Game_Syncs_SkillSyncs': return accessor(index, new SkillSyncs())! as SkillSyncs;
    case 'Game_Syncs_DamageSyncsRequest': return accessor(index, new DamageSyncsRequest())! as DamageSyncsRequest;
    case 'Game_Syncs_DamageSyncsPush': return accessor(index, new DamageSyncsPush())! as DamageSyncsPush;
    case 'Game_Syncs_PlayerStateSyncs': return accessor(index, new PlayerStateSyncs())! as PlayerStateSyncs;
    case 'Game_Syncs_PlayerLevelChangeRequest': return accessor(index, new PlayerLevelChangeRequest())! as PlayerLevelChangeRequest;
    default: return null;
  }
}
