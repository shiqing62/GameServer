"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeBuffSyncsRequest = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var de_buff_param_js_1 = require("../../game/common/de-buff-param.js");
var DeBuffSyncsRequest = /** @class */ (function () {
    function DeBuffSyncsRequest() {
        this.bb = null;
        this.bb_pos = 0;
    }
    DeBuffSyncsRequest.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    DeBuffSyncsRequest.getRootAsDeBuffSyncsRequest = function (bb, obj) {
        return (obj || new DeBuffSyncsRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    DeBuffSyncsRequest.getSizePrefixedRootAsDeBuffSyncsRequest = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new DeBuffSyncsRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    DeBuffSyncsRequest.prototype.attackerId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    DeBuffSyncsRequest.prototype.targetId = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    DeBuffSyncsRequest.prototype.debuffId = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    DeBuffSyncsRequest.prototype.params = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? (obj || new de_buff_param_js_1.DeBuffParam()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    DeBuffSyncsRequest.prototype.paramsLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    DeBuffSyncsRequest.startDeBuffSyncsRequest = function (builder) {
        builder.startObject(4);
    };
    DeBuffSyncsRequest.addAttackerId = function (builder, attackerId) {
        builder.addFieldInt32(0, attackerId, 0);
    };
    DeBuffSyncsRequest.addTargetId = function (builder, targetId) {
        builder.addFieldInt32(1, targetId, 0);
    };
    DeBuffSyncsRequest.addDebuffId = function (builder, debuffId) {
        builder.addFieldInt32(2, debuffId, 0);
    };
    DeBuffSyncsRequest.addParams = function (builder, paramsOffset) {
        builder.addFieldOffset(3, paramsOffset, 0);
    };
    DeBuffSyncsRequest.createParamsVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    DeBuffSyncsRequest.startParamsVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    DeBuffSyncsRequest.endDeBuffSyncsRequest = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    DeBuffSyncsRequest.finishDeBuffSyncsRequestBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    DeBuffSyncsRequest.finishSizePrefixedDeBuffSyncsRequestBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    DeBuffSyncsRequest.createDeBuffSyncsRequest = function (builder, attackerId, targetId, debuffId, paramsOffset) {
        DeBuffSyncsRequest.startDeBuffSyncsRequest(builder);
        DeBuffSyncsRequest.addAttackerId(builder, attackerId);
        DeBuffSyncsRequest.addTargetId(builder, targetId);
        DeBuffSyncsRequest.addDebuffId(builder, debuffId);
        DeBuffSyncsRequest.addParams(builder, paramsOffset);
        return DeBuffSyncsRequest.endDeBuffSyncsRequest(builder);
    };
    return DeBuffSyncsRequest;
}());
exports.DeBuffSyncsRequest = DeBuffSyncsRequest;
