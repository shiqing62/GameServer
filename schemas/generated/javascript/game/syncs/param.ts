// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ParamValue, unionToParamValue, unionListToParamValue } from '../../game/common/param-value.js';
import { ParamType } from '../../game/syncs/param-type.js';


export class Param {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Param {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsParam(bb:flatbuffers.ByteBuffer, obj?:Param):Param {
  return (obj || new Param()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsParam(bb:flatbuffers.ByteBuffer, obj?:Param):Param {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Param()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

paramType():ParamType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ParamType.TargetPos;
}

paramValueType():ParamValue {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ParamValue.NONE;
}

paramValue<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startParam(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addParamType(builder:flatbuffers.Builder, paramType:ParamType) {
  builder.addFieldInt8(0, paramType, ParamType.TargetPos);
}

static addParamValueType(builder:flatbuffers.Builder, paramValueType:ParamValue) {
  builder.addFieldInt8(1, paramValueType, ParamValue.NONE);
}

static addParamValue(builder:flatbuffers.Builder, paramValueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, paramValueOffset, 0);
}

static endParam(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createParam(builder:flatbuffers.Builder, paramType:ParamType, paramValueType:ParamValue, paramValueOffset:flatbuffers.Offset):flatbuffers.Offset {
  Param.startParam(builder);
  Param.addParamType(builder, paramType);
  Param.addParamValueType(builder, paramValueType);
  Param.addParamValue(builder, paramValueOffset);
  return Param.endParam(builder);
}
}
