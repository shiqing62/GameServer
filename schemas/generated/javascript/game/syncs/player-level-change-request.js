"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerLevelChangeRequest = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var PlayerLevelChangeRequest = /** @class */ (function () {
    function PlayerLevelChangeRequest() {
        this.bb = null;
        this.bb_pos = 0;
    }
    PlayerLevelChangeRequest.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    PlayerLevelChangeRequest.getRootAsPlayerLevelChangeRequest = function (bb, obj) {
        return (obj || new PlayerLevelChangeRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PlayerLevelChangeRequest.getSizePrefixedRootAsPlayerLevelChangeRequest = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new PlayerLevelChangeRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PlayerLevelChangeRequest.prototype.uid = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    PlayerLevelChangeRequest.prototype.deltaLevel = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    PlayerLevelChangeRequest.startPlayerLevelChangeRequest = function (builder) {
        builder.startObject(2);
    };
    PlayerLevelChangeRequest.addUid = function (builder, uid) {
        builder.addFieldInt32(0, uid, 0);
    };
    PlayerLevelChangeRequest.addDeltaLevel = function (builder, deltaLevel) {
        builder.addFieldInt32(1, deltaLevel, 0);
    };
    PlayerLevelChangeRequest.endPlayerLevelChangeRequest = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    PlayerLevelChangeRequest.finishPlayerLevelChangeRequestBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    PlayerLevelChangeRequest.finishSizePrefixedPlayerLevelChangeRequestBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    PlayerLevelChangeRequest.createPlayerLevelChangeRequest = function (builder, uid, deltaLevel) {
        PlayerLevelChangeRequest.startPlayerLevelChangeRequest(builder);
        PlayerLevelChangeRequest.addUid(builder, uid);
        PlayerLevelChangeRequest.addDeltaLevel(builder, deltaLevel);
        return PlayerLevelChangeRequest.endPlayerLevelChangeRequest(builder);
    };
    return PlayerLevelChangeRequest;
}());
exports.PlayerLevelChangeRequest = PlayerLevelChangeRequest;
