"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerMoveResponse = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var vec3_js_1 = require("../../game/common/vec3.js");
var PlayerMoveResponse = /** @class */ (function () {
    function PlayerMoveResponse() {
        this.bb = null;
        this.bb_pos = 0;
    }
    PlayerMoveResponse.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    PlayerMoveResponse.getRootAsPlayerMoveResponse = function (bb, obj) {
        return (obj || new PlayerMoveResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PlayerMoveResponse.getSizePrefixedRootAsPlayerMoveResponse = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new PlayerMoveResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PlayerMoveResponse.prototype.uid = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    PlayerMoveResponse.prototype.pos = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? (obj || new vec3_js_1.Vec3()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
    };
    PlayerMoveResponse.startPlayerMoveResponse = function (builder) {
        builder.startObject(2);
    };
    PlayerMoveResponse.addUid = function (builder, uid) {
        builder.addFieldInt32(0, uid, 0);
    };
    PlayerMoveResponse.addPos = function (builder, posOffset) {
        builder.addFieldOffset(1, posOffset, 0);
    };
    PlayerMoveResponse.endPlayerMoveResponse = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    return PlayerMoveResponse;
}());
exports.PlayerMoveResponse = PlayerMoveResponse;
