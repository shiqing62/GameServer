"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerStateSyncs = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var PlayerStateSyncs = /** @class */ (function () {
    function PlayerStateSyncs() {
        this.bb = null;
        this.bb_pos = 0;
    }
    PlayerStateSyncs.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    PlayerStateSyncs.getRootAsPlayerStateSyncs = function (bb, obj) {
        return (obj || new PlayerStateSyncs()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PlayerStateSyncs.getSizePrefixedRootAsPlayerStateSyncs = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new PlayerStateSyncs()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PlayerStateSyncs.prototype.uid = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    PlayerStateSyncs.prototype.state = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    PlayerStateSyncs.prototype.hp = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    PlayerStateSyncs.prototype.maxHp = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    PlayerStateSyncs.prototype.level = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    PlayerStateSyncs.startPlayerStateSyncs = function (builder) {
        builder.startObject(5);
    };
    PlayerStateSyncs.addUid = function (builder, uid) {
        builder.addFieldInt32(0, uid, 0);
    };
    PlayerStateSyncs.addState = function (builder, state) {
        builder.addFieldInt32(1, state, 0);
    };
    PlayerStateSyncs.addHp = function (builder, hp) {
        builder.addFieldFloat32(2, hp, 0.0);
    };
    PlayerStateSyncs.addMaxHp = function (builder, maxHp) {
        builder.addFieldFloat32(3, maxHp, 0.0);
    };
    PlayerStateSyncs.addLevel = function (builder, level) {
        builder.addFieldInt32(4, level, 0);
    };
    PlayerStateSyncs.endPlayerStateSyncs = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    PlayerStateSyncs.finishPlayerStateSyncsBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    PlayerStateSyncs.finishSizePrefixedPlayerStateSyncsBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    PlayerStateSyncs.createPlayerStateSyncs = function (builder, uid, state, hp, maxHp, level) {
        PlayerStateSyncs.startPlayerStateSyncs(builder);
        PlayerStateSyncs.addUid(builder, uid);
        PlayerStateSyncs.addState(builder, state);
        PlayerStateSyncs.addHp(builder, hp);
        PlayerStateSyncs.addMaxHp(builder, maxHp);
        PlayerStateSyncs.addLevel(builder, level);
        return PlayerStateSyncs.endPlayerStateSyncs(builder);
    };
    return PlayerStateSyncs;
}());
exports.PlayerStateSyncs = PlayerStateSyncs;
